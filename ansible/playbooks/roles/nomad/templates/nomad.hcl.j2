#jinja2: trim_blocks:False
#

name = "{{ nomad_name }}"
region = "{{ nomad_region }}"
datacenter = "{{ nomad_datacenter }}"

data_dir = "{{ nomad_data_dir }}"

enable_debug = {{ nomad_enable_debug|lower }}
log_level = "{{ nomad_log_level }}"
log_file = "{{ nomad_log_file }}"
log_rotate_max_files = "{{ nomad_log_rotate_max_files }}"
log_rotate_duration = "{{ nomad_log_rotate_duration }}"

disable_update_check = {{ nomad_disable_update_check|lower }}

leave_on_terminate = {{ nomad_leave_on_terminate|lower }}
leave_on_interrupt = {{ nomad_leave_on_interrupt|lower }}

bind_addr = "{{ nomad_bind_addr }}"

addresses {
  http = "{{nomad_addresses_http}}"
  rpc = "{{nomad_addresses_rpc}}"
  serf = "{{nomad_addresses_serf}}"
}

ports {
    http = {{ nomad_ports_http }}
    rpc = {{ nomad_ports_rpc }}
    serf = {{ nomad_ports_serf }}
}

advertise {
    http = "{{ nomad_advertise_http }}"
    rpc = "{{ nomad_advertise_rpc }}"
    serf = "{{ nomad_advertise_serf }}"
}

# Nomad server configuration stanza
server {
  enabled = {{ nomad_server_enabled|lower }}
  bootstrap_expect = {{ nomad_server_bootstrap_expect }}
  encrypt = "{{ nomad_server_encrypt }}"
  
  server_join {
    retry_join = {{ nomad_server_server_join_retry_join }}
    retry_max = {{ nomad_server_server_join_retry_max }}
    retry_interval = "{{ nomad_server_server_join_retry_interval}}"
  }

}

# Nomad client configuration stanza
client {
  enabled = {{ nomad_client_enabled|lower }}

  server_join {
    retry_join = {{ nomad_client_server_join_retry_join }}
    retry_max = {{ nomad_client_server_join_retry_max }}
    retry_interval = "{{ nomad_client_server_join_retry_interval}}"
  }

  node_class = "{{ nomad_client_node_class }}"
}

# Nomad consul configuration stanza
consul {
    # The address to the Consul agent.
    address = "{{ nomad_consul_address }}"
    token = "{{ nomad_consul_token }}"
    ca_file = "{{ nomad_consul_ca_file }}"
    # grpc_tls configuration
    # grpc_ca_file = "{{ nomad_consul_ca_file }}"
    grpc_address = "127.0.0.1:8502"
    # The service name to register the server and client with Consul.
    server_service_name = "{{ nomad_consul_server_service_name }}"
    client_service_name = "{{ nomad_consul_client_service_name }}"

    # Enables automatically registering the services.
    auto_advertise = {{ nomad_consul_auto_advertise|lower }}

    # Enabling the server and client to bootstrap using Consul.
    server_auto_join = {{ nomad_consul_server_auto_join|lower }}
    client_auto_join = {{ nomad_consul_client_auto_join|lower }}
   
    ssl = {{ nomad_consul_ssl|lower }}
    verify_ssl = {{ nomad_consul_verify_ssl|lower}}
}

# Nomad vault configuration stanza
vault {
    enabled = {{ nomad_vault_enabled|lower }}
    address = "{{ nomad_vault_address }}"
    token = "{{ nomad_vault_token }}"
    allow_unauthenticated = {{ nomad_vault_allow_unauthenticated|lower }}
    create_from_role = "{{ nomad_vault_create_from_role }}"
    task_token_ttl = "{{ nomad_vault_task_token_ttl }}"
    ca_file = "{{ nomad_vault_ca_file }}"
    ca_path = "{{ nomad_vault_ca_path }}"
    cert_file = "{{ nomad_vault_cert_file }}"
    key_file = "{{ nomad_vault_key_file }}"
    tls_server_name = "{{ nomad_vault_tls_server_name }}"
    tls_skip_verify = {{ nomad_vault_tls_skip_verify|lower }}
}

# Nomad acl configuration stanza
acl {
    enabled = {{ nomad_acl_enabled|lower }}
    token_ttl = "{{ nomad_acl_token_ttl }}"
    policy_ttl = "{{ nomad_acl_policy_ttl }}"
    replication_token = "{{ nomad_acl_replication_token }}"
}

